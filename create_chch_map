#!/usr/bin/python3

import geopandas as gpd
import pandas as pd
import shapely
import folium

# find Christchurch
import geopy.geocoders
loca = geopy.geocoders.Nominatim(country_bias='New Zealand')
chch = loca.geocode('Christchurch')

# make an interactive map of Christchurch
m = folium.Map(location=(chch.latitude, chch.longitude), zoom_start=13, control_scale=True)

# got the school zones from koordinates.com
# https://koordinates.com/layer/743-nz-school-zones-sept-2010/?ex=1
zones = gpd.read_file('school_zones/nz-school-zones-sept-2010.shp')
#zones = zones.to_crs(epsg=3857)

#foo = folium.features.GeoJson(zones, name='School zones')
#foo.add_to(m)





# lets get the school locations. 
# https://catalogue.data.govt.nz/dataset/directory-of-educational-institutions/resource/bdfe0e4c-1554-4701-a8fe-ba1c8e0cc2ce
schools = pd.read_csv('schooldirectory-28-04-2019-233051.csv')
schools = schools[schools.Latitude.notnull()]      # some don't have locations - I've manually checked and there aren't any we are interested in
schools['geometry'] = [shapely.geometry.Point(x, y) for x, y in zip(schools.Longitude, schools.Latitude)]
schools = gpd.GeoDataFrame(schools)
schools.crs = {'init' :'epsg:4326'}    # this is basic latitude longitude
#schools = schools.to_crs(epsg=3857)    # this is what folium map is in

# only bother with schools that are in the bounds of chch
bb = [float(i) for i in chch.raw['boundingbox']]
schools = schools.cx[bb[2]:bb[3], bb[0]:bb[1]]

m = folium.Map(location=(chch.latitude, chch.longitude), zoom_start=13, control_scale=True)

# the schools that can cater to intermediate aged pupils
prim_group = folium.FeatureGroup("Full primary and intermediate schools")
sc = schools.loc[(schools.Org_Type == 'Full Primary') | (schools.Org_Type == 'Intermediate')]
for i, row in sc.iterrows():
   prim_group.add_child(folium.Marker(
      location = [row.Latitude, row.Longitude],
      icon = folium.Icon(color='green',icon='italic'),
      popup=
"""{}<table><tr><td>Type</td><td>{}</td>
<tr><td>CoEd?</td><td>{}</td>
<tr><td>Decile</td><td>{}</td>
<tr><td>#&nbsp;Students</td><td>{}</td>
<tr><td>#&nbsp;European&nbsp;</td><td>{}</td></table>""".format(row.Org_Name.replace(' ', '&nbsp;'), row.Org_Type.replace(' ', '&nbsp;'), 'Y' if row.CoEd_Status == 'Co-Educational' else 'N', row.Decile, row.Total, row.European)
   ))
  

# there are two types of high schools, 'Secondary (Year 9-15)',
# 'Secondary (Year 7-15)', get them both
high_group = folium.FeatureGroup("High schools")
sc = schools.loc[schools.Org_Type.str.startswith('Second')]
for i, row in sc.iterrows():
   high_group.add_child(folium.Marker(
      location = [row.Latitude, row.Longitude],
      icon = folium.Icon(color='blue', prefix='fa', icon='building'),
      popup=
"""{}<table><tr><td>Type</td><td>{}</td>
<tr><td>CoEd?</td><td>{}</td>
<tr><td>Decile</td><td>{}</td>
<tr><td>#&nbsp;Students</td><td>{}</td>
<tr><td>#&nbsp;European&nbsp;</td><td>{}</td></table>""".format(row.Org_Name.replace(' ', '&nbsp;'), row.Org_Type.replace(' ', '&nbsp;'), 'Y' if row.CoEd_Status == 'Co-Educational' else 'N', row.Decile, row.Total, row.European)
   ))
  

# write it out

m.add_child(prim_group)
m.add_child(high_group)
folium.LayerControl().add_to(m)



# write it out 
m.save('docs/chch.html')

