#!/usr/bin/python3

import geopandas as gpd
import pandas as pd
import shapely
import folium
import folium.plugins

# find Christchurch
import geopy.geocoders
loca = geopy.geocoders.Nominatim(country_bias='New Zealand')
chch = loca.geocode('Christchurch')

# make an interactive map of Christchurch
m = folium.Map(location=(chch.latitude, chch.longitude), zoom_start=13, control_scale=True)




# lets get the school locations. 
# https://catalogue.data.govt.nz/dataset/directory-of-educational-institutions/resource/bdfe0e4c-1554-4701-a8fe-ba1c8e0cc2ce
schools = pd.read_csv('schooldirectory-28-04-2019-233051.csv')
schools = schools[['School_Id', 'Org_Name', 'Longitude', 'Latitude', 'Org_Type', 'CoEd_Status', 'Decile', 'Total', 'European']]
schools = schools[schools.Latitude.notnull()]      # some don't have locations - I've manually checked and there aren't any we are interested in
schools = schools.loc[(schools.Org_Type == 'Full Primary') | (schools.Org_Type == 'Intermediate') | (schools.Org_Type.str.startswith('Second'))]   # for now only interested in these schools
schools['geometry'] = [shapely.geometry.Point(x, y) for x, y in zip(schools.Longitude, schools.Latitude)]
schools = gpd.GeoDataFrame(schools)
schools.crs = {'init' :'epsg:4326'}    # this is basic latitude longitude
#schools = schools.to_crs(epsg=3857)    # this is what folium map is in

# only bother with schools that are in the bounds of chch
bb = [float(i) for i in chch.raw['boundingbox']]
schools = schools.cx[bb[2]:bb[3], bb[0]:bb[1]]

# the schools that can cater to intermediate aged pupils
prim_group = folium.FeatureGroup("Full primary and intermediate schools")
sc = schools.loc[(schools.Org_Type == 'Full Primary') | (schools.Org_Type == 'Intermediate')]
id2marker = {}      # maps school id to leaflet marker name
for i, row in sc.iterrows():
   marker = folium.Marker(
      location = [row.Latitude, row.Longitude],
      icon = folium.Icon(color='green',icon='italic'),
      popup=
"""{}<table><tr><td>Type</td><td>{}</td>
<tr><td>CoEd?</td><td>{}</td>
<tr><td>Decile</td><td>{}</td>
<tr><td>#&nbsp;Students</td><td>{}</td>
<tr><td>#&nbsp;European&nbsp;</td><td>{}</td></table>""".format(row.Org_Name.replace(' ', '&nbsp;'), row.Org_Type.replace(' ', '&nbsp;'), 'Y' if row.CoEd_Status == 'Co-Educational' else 'N', row.Decile, row.Total, row.European)
   )
   id2marker[row.School_Id] = marker.get_name()
   prim_group.add_child(marker)
  

# there are two types of high schools, 'Secondary (Year 9-15)',
# 'Secondary (Year 7-15)', get them both
high_group = folium.FeatureGroup("High schools")
sc = schools.loc[schools.Org_Type.str.startswith('Second')]
for i, row in sc.iterrows():
   marker = folium.Marker(
      location = [row.Latitude, row.Longitude],
      icon = folium.Icon(color='blue', prefix='fa', icon='building'),
      popup=
"""{}<table><tr><td>Type</td><td>{}</td>
<tr><td>CoEd?</td><td>{}</td>
<tr><td>Decile</td><td>{}</td>
<tr><td>#&nbsp;Students</td><td>{}</td>
<tr><td>#&nbsp;European&nbsp;</td><td>{}</td></table>""".format(row.Org_Name.replace(' ', '&nbsp;'), row.Org_Type.replace(' ', '&nbsp;'), 'Y' if row.CoEd_Status == 'Co-Educational' else 'N', row.Decile, row.Total, row.European)
   )
   id2marker[row.School_Id] = marker.get_name()
   high_group.add_child(marker)


# got the school zones from koordinates.com
# https://koordinates.com/layer/743-nz-school-zones-sept-2010/?ex=1
zones = gpd.read_file('school_zones/nz-school-zones-sept-2010.shp')
# only need id and geometry of zone
zones = zones[['SchoolID','geometry']]
# only need zone info for the schools we are interested in
zones = zones.loc[zones.SchoolID.isin(schools.School_Id)]
zones = zones.to_crs(epsg=4326)  # basic lat/lon, everything else is in this



id2zone = {}
for i, z in zones.iterrows():
#for i,z in list(zones.iterrows())[:5]:
   latlons = [(i[1], i[0]) for i in shapely.geometry.mapping(z.geometry)['coordinates'][0]]
   poly = folium.vector_layers.Polygon(latlons)
   #layer = folium.map.Layer(name=z.SchoolID, overlay=True, control=True, show=False)
   layer = folium.FeatureGroup(name='FOO'+schools.loc[schools.School_Id == z.SchoolID].Org_Name.values[0], overlay=True, control=False, show=False)
   id2zone[z.SchoolID] = layer.get_name()
   layer.add_child(poly)
   layer.add_to(m)



m.add_child(prim_group)
m.add_child(high_group)
m.add_child(folium.plugins.MeasureControl(primary_length_unit='kilometers', primary_area_unit='hectares'))
folium.LayerControl().add_to(m)


from branca.element import Element
e = []
for i in id2zone:
   e.append(
"""{2}.remove();
   {1}.on('click', (function(event) {{
    if({0}.hasLayer({2})) {{
        {0}.removeLayer({2});
    }} else {{
        {0}.addLayer({2});
   }}
}}));""".format(m.get_name(), id2marker[i], id2zone[i]))
e = Element("\n".join(e))
html = m.get_root()
html.script.get_root().render()
html.script._children[e.get_name()] = e


# write it out 
m.save('docs/chch.html')

